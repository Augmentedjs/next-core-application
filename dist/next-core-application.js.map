{"version":3,"sources":["webpack://next-core-application/webpack/universalModuleDefinition","webpack://next-core-application/webpack/bootstrap","webpack://next-core-application/./src/index.js","webpack://next-core-application/./src/application.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Application","init","app","Promise","resolve","reject","initialize","Error","after","afterInitialize","setStarted","_started","started","check","METADATA_KEY","NAME","DATASTORE","constructor","options","metadata","_metadata","_name","datastore","router","_router","beforeInitialize","getMetadataItem","setMetadataItem","registerRouter","start","before","then","catch","e","stop","ds"],"mappings":"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","file":"next-core-application.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"next-core-application\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"next-core-application\"] = factory();\n\telse\n\t\troot[\"next-core-application\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Application from \"./application.js\";\n\nmodule.exports.Application = Application;\n","const before = (app) => {\n  return new Promise( (resolve, reject) => {\n    const t = app.beforeInitialize();\n    if (t) {\n      resolve(app);\n    } else {\n      reject(new Error(\"failed before initialize!\"));\n    }\n  });\n},\ninit = (app) => {\n  return new Promise( (resolve, reject) => {\n    const t = app.initialize();\n    if (t) {\n      resolve(app);\n    } else {\n      reject(new Error(\"failed initialize!\"));\n    }\n  });\n},\nafter = (app) => {\n  return new Promise( (resolve, reject) => {\n    const t = app.afterInitialize();\n    if (t) {\n      resolve(app);\n    } else {\n      reject(new Error(\"failed after initialize!\"));\n    }\n  });\n},\nsetStarted = (app) => {\n  return new Promise( (resolve, reject) => {\n    app._started = true;\n    if (app.started) {\n      resolve(app);\n    } else {\n      reject(new Error(\"failed setting started!\"));\n    }\n  });\n},\ncheck = (app) => {\n  return new Promise( (resolve, reject) => {\n    const t = app.started;\n    if (t) {\n      resolve(app);\n    } else {\n      reject(new Error(\"failed starting!\"));\n    }\n  });\n},\nDEFAULT_NAME = \"untitled\",\nMETADATA_KEY = {};\nMETADATA_KEY.NAME = Symbol(\"name\");\nMETADATA_KEY.DATASTORE = Symbol(\"datastore\");\n\n/**\n * <p>Application Class for use to define an application.<br/>\n * An application contains metadata and initializers for the application.<br/>\n * <em>Applications track history, and normally would contain the entire single page App startup.</em></p>\n * <p>Supported options are:</p>\n * <ul>\n * <li><em>metadata</em> - an object of metadata to use for storing properties</li>\n * <li><em>name</em> - the name of the application</li>\n * <li><em>datastore</em> - a datastore to use via the datastore property</li>\n * <li><em>router</em> - the router to use via the router property</li>\n * </ul>\n * @param {object} options options to init the application\n * @example\n * const app = new Application({ \"name\": \"Awesome\" });\n * app.start();\n * @example\n * const app = new Application();\n * app.name = \"My Super Application!\";\n * app.setMetadataItem(\"description\", \"something very awesome\");\n * app.initialize = () => { do some stuff... };\n * app.start();\n */\nclass Application {\n  constructor(options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (options.metadata) {\n      this._metadata = options.metadata;\n    } else {\n      this._metadata = {};\n    }\n\n    // preassign a name\n    if (options.name) {\n      this._name = options.name;\n    } else {\n      this._name = DEFAULT_NAME;\n    }\n\n    // preset a datastore object\n    if (options.datastore) {\n      this.datastore = options.datastore;\n    } else {\n      this.datastore = {};\n    }\n\n    if (options.router) {\n      this._router = options.router;\n    } else {\n      this._router = null;\n    }\n\n    this._started = false;\n  };\n\n  /**\n   * The router property of the application\n   * @property router\n   */\n\n  get router() {\n    return this._router;\n  };\n\n  set router(router) {\n    this._router = router;\n  };\n\n  /**\n   * The started property of the application\n   * @property started\n   * @returns {boolean} Returns the property of the started Event\n   */\n  get started() {\n    return this._started;\n  };\n\n  /**\n   * Event for after during startup of the application\n   */\n  initialize() {\n    return true;\n  };\n\n  /** Event for before the startup of the application\n   */\n  beforeInitialize() {\n    return true;\n  };\n\n  /** Event for after the startup of the application\n   */\n  afterInitialize() {\n    return true;\n  };\n\n  /** The application name\n   * @property name\n   */\n  get name() {\n    return this.getMetadataItem(METADATA_KEY.NAME);\n  };\n\n  set name(n) {\n    return this.setMetadataItem(METADATA_KEY.NAME, n);\n  };\n\n  /** The metadata map\n  * @property metadata\n  * @returns Map of metadata in an Augmented.Utility.Map\n  */\n  get metadata() {\n    return this._metadata;\n  };\n\n  /** Set a specific item in metadata\n   * @param {string} key Key to set\n   * @param {object} value Value of the key\n   */\n  setMetadataItem(key, value) {\n    this._metadata[key] = value;\n  };\n\n  /** Get a specific item in metadata\n   * @param {string} key Key\n   * @returns {object} value of the key\n   */\n  getMetadataItem(key) {\n    return this._metadata[key];\n  };\n\n  /** Register a Router - adds routes to the application\n   * @param {Router} router Router to register\n   */\n  registerRouter(router) {\n    if (router){\n      this._router = router;\n    }\n  };\n\n  /** Event to start the application and history\n   * @returns {Promise} Promise.Resolve or Promise.Reject based on success\n   */\n   start() {\n     const app = this;\n     return new Promise( (resolve, reject) => {\n       before(app)\n       .then(init)\n       .then(after)\n       .then(setStarted)\n       .then(check)\n       .then( (app) => {\n         resolve(app);\n       })\n       .catch( (e) => {\n         app.stop();\n         reject(e);\n       });\n     });\n   };\n\n  /** Event to stop the application and history\n   */\n  stop() {\n    this._started = false;\n  };\n\n  /** Gets the datastore for the application\n   * @property {Augmented.Model|object} datastore\n   */\n  get datastore() {\n    return this.getMetadataItem(METADATA_KEY.DATASTORE);\n  };\n\n  set datastore(ds) {\n    if (ds) {\n      this.setMetadataItem(METADATA_KEY.DATASTORE, ds);\n    }\n  };\n};\n\nexport default Application;\n"],"sourceRoot":""}